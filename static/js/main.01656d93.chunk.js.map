{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearcBox","placeholder","handleChange","type","onChange","App","e","setState","searcField","target","value","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAG,UAAKL,EAAMG,QAAQG,QAClG,6BAAMN,EAAMG,QAAQG,OACpB,4BAAIN,EAAMG,QAAQI,YCHbC,G,MAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLlBO,G,MAAW,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAEpC,OACI,uBACIZ,UAAU,SACVa,KAAK,OACLF,YAAaA,EACbG,SAAUF,MCgCPG,E,kDAnCb,aAAc,IAAD,8BACX,gBAeFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,WAAWF,EAAEG,OAAOC,SAdpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,WAAY,IAGd,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBART,E,qDAWb,WAAoB,IAAD,OACjBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAET,SAAUmB,S,oBAK7C,WACE,MAA+BC,KAAKP,MAA7Bb,EAAP,EAAOA,SAAUU,EAAjB,EAAiBA,WACXW,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAAIA,EAAQG,KAAK0B,cAAcC,SAASd,EAAWa,kBACnG,OACE,sBAAK/B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAcgB,KAAKhB,eAGrB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/BVI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.01656d93.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.scss';\r\n\r\n\r\nexport const Card = props => (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`} alt={`${props.monster.name}`} />\r\n        <h2 >{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.scss'\r\n\r\n\r\nexport const CardList = props => {\r\n    return <div className=\"card-list\">\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster}/>\r\n          ))\r\n        }\r\n        </div>\r\n}","import React from \"react\";\r\nimport './search-box.styles.scss';\r\n\r\nexport const SearcBox = ({ placeholder, handleChange }) => {\r\n\r\n    return (\r\n        <input \r\n            className='search' \r\n            type=\"text\" \r\n            placeholder={placeholder} \r\n            onChange={handleChange}\r\n        />\r\n    )\r\n\r\n}","import React, { Component } from 'react';\n\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearcBox } from './components/search/search.component';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searcField: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json() )\n      .then(users => this.setState({ monsters: users}));\n  }\n  handleChange = e => {\n    this.setState({ searcField:e.target.value })\n  }\n  render() {\n    const {monsters, searcField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searcField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Robo Friends</h1>\n        <SearcBox \n          placeholder=\"Search Friends\" \n          handleChange={this.handleChange}\n        />\n        \n        <CardList monsters={filteredMonsters} />                    \n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}